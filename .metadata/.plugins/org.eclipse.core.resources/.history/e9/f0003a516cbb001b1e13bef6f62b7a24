****************Modele de Microservice Multiconteneur*******************
-on cree un project spring: ms-uh2c avec les dependance: jpa,rstRepository,devtools,mysqldriver,lombook,spring web
-on cree la classe Etudiant dans le package org.sid
-on ajoute les attributs a la classe etudiant
-au met l'annotation @Entity
-on met l'annoation @GeneratedValue
-on consulte le site lombook pour voir comment l'ituliser dans eclipse*
-on met l'annoation @Data et autre lombok
-pour faire l ORM on cree une interface EtudiantRepository dans le package org.sid
-a l'interieur de l'interface on cree une methde personnalise: consulter la doc de orm avec spring data pour voir comment utiliser les convention findBy ou voir comment utliser @Wuery  hql avec java*
-au niveau de l'interface on met l'annotation RestRepositoryResource
-dans le fichier application.properties on met les proprietes de connection a la BD H2
-puis on demarre l'application
-on tape url:localh√≥st:8080/etudiants pour consulter l'api rest
-on consulte la base de donnee pour voir si les tables ont bien ete creer via l'url:localhost:8080/h2-console
-dans l'application de demarrage on implemente l'interface CommandLineRunner puis on redefinir la methode run
-on utlise l'annoation @Autowired
-on puis on demarre l'application
-on tape l'url: localhost:8080/h2-console pour voir les donnees entrees dans la BD
-on tape l'url: localhost:8080/etudiants pour consuletr le web service
-on tape: localhost:8080/etudiants?size=2&page=1, localhost:8080/etudiants?size=2&page=2

****************
-dans le package org.sid on cree la classe Formation
-on ajoute l'association  entre l'etudiant et la formation, une formation contient ne collection 'etudiant
-on met l'onnotation @OneToMany dans la classe Formation
-dans la table etudiant on ajoute un attribut de type Formation et une relation @ManyToOne
-dans le meme package on cree une interface FormtionRepository
-dans l'appliation de demarrage  on cree un objet d type FormationRepository
-on ajoute @Autowired
-dans l'application de demarrage on cree des formation et on les ajoutes aux etudiants
-dans le fichier application.proprties du projet on change la valeur du de la proprite spring.jpa.hibernate.ddl-auto en create parceque un nouveau champs a ete jouter dans la table etudiant 
-on tape l'url .localhost:8080/h2-console pour voir l#etat de la BD
-on tape :8080/formations
-on tape :8080/formations/1
-on tape :8080/formations/1/etudiants
-on tape :8080/formations/2/etudiants
-on tape :8080/etudiants/1
-on tape :8080/etudiants/1/formation
-installer l'extension ARC sur googleChrome
-dans ARC on envoi une rquette post pour cree un etudiant:methode POST;dans l'url:8080:/etudiants; dans le body:{"nom":"Issam","prenom":"Issa","formation":"http://localhost:8080/formations/1"} puis on envoi la requette
-dans ARC on fait un update avec l methode PATCH, URL: 8080:/etudiants/5; Body:{"dateNaissance":"1990-11-11"
-Dans ARC on fait une suppression avec la methode Delete et met l'URL